#!/usr/bin/Rscript

# This script takes a SIF file containting an interaction network
# and makes an index of chromosomes where the involved genes belong.

# Input is of the form:

# gene_1 <tab> M.I. value <tab> gene_2

# The output index is of the form:

# chrom_for_gene_1 <tab> chrom_for_gene_2

library("argparse")
library("chrom.lookup")
library("data.table")
# MAIN

parser <- ArgumentParser(description = "Split a sif file in intra/inter chromosomic interactions.")
parser$add_argument(
	"file",
	metavar = 'file',
	type = 'character',
	help = "The SIF file to process."
)
parser$add_argument(
	"--vanilla",
	help = "The name of the file where to write chrom_info as obtained from bioMart."
)
parser$add_argument(
	"-o",
	"--output",
	help = "The name of the file where to write chrom_info using only valid names."
)
args <- parser$parse_args()

if(is.null(args$vanilla)) {
	idx_vanilla = gsub(".(txt|sif)", ".vanilla.chrom_info", basename(args$file))
} else {
	idx_vanilla = args$vanilla
}

if(is.null(args$output)) {
	idx_valid = gsub(".(txt|sif)", "_chrom.index", basename(args$file))
} else {
	idx_valid = args$output
}

sif <- fread(input = args$file, data.table = FALSE)
genes <- unique(c(unique(sif$V1), unique(sif$V3)))
genes <- gsub("'", "", genes)
rm(sif)

chrom_info = chrom.info.biomart(genes)
rm(genes)

# Write index for all interactions (vanilla)
write.table(
	chrom_info,
	file = idx_vanilla,
	quote = FALSE,
	sep = "\t",
	row.names = FALSE,
	col.names = FALSE
)

chrom_info = valid.chrom.info(chrom_info)

# Write index for valid interactions
write.table(
	chrom_info,
	file = idx_valid,
	quote = FALSE,
	sep = "\t",
	row.names = FALSE,
	col.names = FALSE
)
